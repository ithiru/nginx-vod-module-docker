worker_processes  auto;

events {
	use epoll;
}

http {
	log_format  main  '$remote_addr $remote_user [$time_local] "$request" '
		'$status "$http_referer" "$http_user_agent"';

	access_log  /dev/stdout  main;
	error_log   stderr debug;

	default_type  application/octet-stream;
	include       mime.types;

	sendfile    on;
	tcp_nopush  on;
	tcp_nodelay on;

	vod_mode                           local;
	vod_metadata_cache                 metadata_cache 16m;
	vod_response_cache                 response_cache 512m;
	vod_last_modified_types            *;
	vod_segment_duration               9000;
	vod_align_segments_to_key_frames   on;
	vod_dash_fragment_file_name_prefix "segment";
	vod_hls_segment_file_name_prefix   "segment";

	vod_manifest_segment_durations_mode accurate;

	open_file_cache          max=1000 inactive=5m;
	open_file_cache_valid    2m;
	open_file_cache_min_uses 1;
	open_file_cache_errors   on;

	aio on;

        upstream drmservice {
           server localhost:80;
        }
 
        vod_base_url 'https://svod.srisrianna.com';

	server {
		listen 80;
		server_name localhost;
		root /usr/local/openresty/nginx/html;

		location ~ ^/videos/.+$ {
			autoindex on;
		}

		location /hls/ {
			vod hls;
			alias /opt/static/videos/;
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		}

                location /ehls/ {
                        vod hls;

                        vod_secret_key "mukkaukk$vod_filepath";
			vod_hls_encryption_method aes-128;

                        alias /opt/static/videos/;
                        add_header Access-Control-Allow-Headers '*';
                        add_header Access-Control-Allow-Origin '*';
                        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
                }

                location /dhls/ {
                        vod hls;

                        vod_drm_enabled on;
                        vod_hls_encryption_method sample-aes-cenc;
                        vod_hls_encryption_key_format "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b";
                        vod_hls_encryption_key_format_versions "1";

                        vod_drm_upstream_location "/drmservice_proxy";
                        vod_drm_request_uri "/$vod_suburi";

                        alias /opt/static/videos/;
                        add_header Access-Control-Allow-Headers '*';
                        add_header Access-Control-Allow-Origin '*';
                        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
                }

		location /thumb/ {
			vod thumb;
			alias /opt/static/videos/;
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		}

		location /dash/ {
			vod dash;
			alias /opt/static/videos/;
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		}

               location /drmservice_proxy/ {
                        internal;
			proxy_pass http://drmservice/drm/;
			proxy_set_header Host $http_host;
		}

                location /edash/ {
                        vod dash;

			vod_drm_enabled on;
                        vod_drm_upstream_location "/drmservice_proxy/drm";

                        alias /opt/static/videos/;
                        add_header Access-Control-Allow-Headers '*';
                        add_header Access-Control-Allow-Origin '*';
                        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
                }

                location /hello {
                     default_type text/plain;
                     content_by_lua_block {
                        ngx.say("Hello World")
                     }
                }
                location /drm/ {
                    add_header Access-Control-Allow-Headers '*';
                    add_header Access-Control-Allow-Origin '*';
                    add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		    # MIME type determined by default_type:
                    default_type 'application/json';
                    add_header Content-Type 'application/json';

                    lua_need_request_body on;
                    content_by_lua_file /opt/lua/dash_drm.lua;
                }
	}
}
